---
# Step 1: Create self-signed certificate for ArgoCD
apiVersion: v1
kind: Secret
metadata:
  name: argocd-server-tls
  namespace: argocd
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lVSjFSMWRXNW9kR1ZGYVcxaFoyVXhNVEUzTUM0d0RRWUpLb1pJaGtjTkFRRUwKQlFBd1BqRUxNQWtHQTFVRUJoTUNSMGN4RFRBTEJnTlZCQWdNQkZObGNuWmxjaTFRRFRBTEJnTlZCQWNNQkZObApjblpsY2kxUURUQWVGdzB5TXpBeU1qQXlNakE1TXpGYUZ3MHlNekF5TXpBNU5EQXdNVGxhTUZFeEN6QUpCZ05WCkJBWVRBa2RITVEwd0N3WURWUVFJREFSVFpYSjJaWEl0VUEwd0N3WURWUVFIREFSVFpYSjJaWEl0VUEwd0hoY04KTUR3d05EQTBNakl3T1RNeERCR0ExVUVBd3dLYUhSMGNITTZMeTluZG1jdWFXOD0KMIG2TUhZR0ExVWRFUUd4CjJDRXhNVGN5TXpjME16STVPVGN4TXpRNVFIZDNkeTFoYkhCbGNuTmxjaTFoZEhSbGMzUXVZMlY5aVFWVEcyb3cKQ0FnRWFBQUEwQ0FnRWFZMlY5TURCdU1GRXdWeUJWUjNReVEzTjBkWEIzSVZKSlEwRU9VRW95YVE0d0RRWUpLbwpaSmhkQ05BUUVMQlFBRGdnRUJBRTZmV3d1WVM5Y3RKYVJsYU9ZeTVnZllmQnpVQkNYYnhXMDJNeEYwUUI2VExyCi84UWJ2MkEweFJXRlk4MFJnNkxBTUsrTTlWaEd0YW9WbEt0RW9SZjdHRGI0QjdaUmxyS0F1MnBxQW9qSXJINUcKQVV5TlJrMll0VmdCTURCOTJ2ZEhiZEJLdHhlbEtsNXJxaHhJcS91TVJjRWlJSXU2RkZrcXoyNzJhRk5YSGJUbwpDMHlVVTBKUVVFaERlbEJYVlRKUlExUTBRMVJzVkRSQ1IxRldWRXRPYldFelIzQlhkakJ5UWsxSGFIQldha2x4CllUYzFVbGREUXpsMFV6RjBVMEpuUjA1Q1VWUlFVRXN5YjBSb1lUVkthVnBFUVhSYVIwVjFUa1JaZWsxdFkzUkoKVVhOM2RGRlhVamRWTWxWNlRVUjNVRkp3YkZSWFJUTldWRmR2YmsxRGFFMU5iV3Q0VEc1MFJGRjNSRkJCUVUwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQU9DQkd3QXdnZ1NvQWdFQUFvSUIKQVFDMHJHbnlzQXJCeDM4cW9oTDJ6M2dpK29EOEtZVDAwT0RkdXpkdHBaZkk5a0hkUUk2aHdWRUpORkJTRg== 
---
# Step 2: Patch ArgoCD server service to use HTTPS port
apiVersion: v1
kind: Service
metadata:
  name: argocd-server
  namespace: argocd
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: https
    port: 443
    protocol: TCP
    targetPort: 8443
---
# Step 3: Create Ingress for ArgoCD with proper annotations
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-ingress
  namespace: argocd
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
    traefik.ingress.kubernetes.io/router.middlewares: argocd-redirect@kubernetescrd
spec:
  tls:
  - hosts:
    - argocd.local
    secretName: argocd-server-tls
  rules:
  - host: argocd.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              number: 443
---
# Step 4: Create middleware to redirect HTTP to HTTPS
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: argocd-redirect
  namespace: argocd
spec:
  redirectScheme:
    scheme: https
    permanent: false